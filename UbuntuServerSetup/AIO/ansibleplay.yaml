- name: All in One Ubuntu Server Setup Ansible Playbook
  host: myhosts
  become: yes

 vars:
    packages:
      - vim
      - git
      - htop
      - curl
      - wget
      - unzip
      - build-essential
      - net-tools
      - tree
      - fail2ban
      - ufw
    jail_local_src: "./JailConf"  # Path to your jail.local file
    custom_port: 12345  # Replace this with your custom port number

  
  tasks:
  
  ##ENSURE SYSTEM IS DEBIAN BASED##
  
   - name: Ensure the system is Debian/Ubuntu based
      debug:
        msg: "This playbook is only supported on Debian/Ubuntu systems."
      when: ansible_facts['os_family'] != "Debian"
      failed_when: ansible_facts['os_family'] != "Debian"
      
  ##INSTALL COMMON PACKAGES##
   
    - name: Update apt cache and upgrade system packages
      apt:
        update_cache: yes
        upgrade: dist
     
    - name: Install commonly used software packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
        
  ##CONFIGURE FAIL2BAN##
  
    - name: Copy custom jail.local configuration file
       ansible.builtin.copy:
         src: "{{ jail_local_src }}"
         dest: /etc/fail2ban/jail.local
         owner: root
         group: root
         mode: '0644'

    - name: Ensure Fail2Ban is running and enabled on boot
      service:
        name: fail2ban
        state: started
        enabled: yes
        
  ##CONFIGURE UFW##

    - name: Ensure UFW is enabled
      ufw:
        state: enabled

    - name: Allow custom port through UFW
      ufw:
        rule: allow
        port: "{{ custom_port }}"
        proto: tcp

    - name: Set UFW default policy to deny incoming
      ufw:
        state: enabled
        default: deny
        direction: incoming

    - name: Set UFW default policy to allow outgoing
      ufw:
        state: enabled
        default: allow
        direction: outgoing
       
  ##HARDEN SSHD_CONFIG##
     
    - name: Copy the hardened SSHD_CONFIG file to the remote server
     ansible.builtin.copy:
        src: ./Hardened-SSHD-CONFIG  # Path to your local sshd_config
        dest: /etc/ssh/sshd_config      # Destination path on the remote system
        owner: root
        group: root
        mode: '0600'                    # Secure permissions
     notify:
        - Restart sshd
  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted
  
     
  ##REBOOT SERVER##
  ##TEST SERVER ACCESS##
